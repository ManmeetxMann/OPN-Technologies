openapi: 3.0.1
info:
  title: Enterprise API
  version: 1.1.0
components:
  securitySchemes:
    bearerAuthJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Response:
      type: object
      additionalProperties: false
      properties:
        data:
          nullable: true
          type: object
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    OrganizationReminderSchedule:
      type: object
      properties:
        enabled:
          type: boolean
        enabledOnWeekends:
          type: boolean
        timeOfDayMillis:
          type: integer
          minimum: 0
          maximum: 86400000
      required:
        - enabled
        - enabledOnWeekends
        - timeOfDayMillis

    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - default
            - childcare
        allowsSelfCheckInOut:
          type: boolean
        hourToSendReport:
          type: integer
          minimum: 0
          maximum: 23
          description: hour of the day to send the report for this organization
          nullable: true
        dayShift:
          type: integer
          minimum: 0
          description: number of days ago to generate the report for (0 to generate it for the day it is sent, 1 for the day before...)
        allowDependants:
          type: boolean
          default: false
        dailyReminder:
          $ref: '#/components/schemas/OrganizationReminderSchedule'
        notificationFormatStop:
          type: string
        notificationFormatCaution:
          type: string
        notificationIconStop:
          type: string
        notificationIconCaution:
          type: string
        enablePushNotifications:
          type: boolean
      required:
        - name

    OrganizationLocation:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        title:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        type:
          type: string
          enum:
            - default
            - event
        attestationRequired:
          type: boolean
        allowAccess:
          type: boolean
        questionnaireId:
          type: string
          nullable: true
        allowsSelfCheckInOut:
          type: boolean
        zones:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              id:
                type: string
              title:
                type: string
              address:
                type: string
              attestationRequired:
                type: boolean
              questionnaireId:
                type: string
              allowsSelfCheckInOut:
                type: boolean
        validFrom:
          type: string
        validUntil:
          type: string
      required:
        - title
        - attestationRequired
        - type

    OrganizationLocationWithAccess:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        title:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        type:
          type: string
          enum:
            - default
            - event
        attestationRequired:
          type: boolean
        allowAccess:
          type: boolean
        questionnaireId:
          type: string
          nullable: true
        allowsSelfCheckInOut:
          type: boolean
        zones:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              id:
                type: string
              title:
                type: string
              address:
                type: string
              attestationRequired:
                type: boolean
              questionnaireId:
                type: string
              allowsSelfCheckInOut:
                type: boolean
        validFrom:
          type: string
        validUntil:
          type: string
        entry:
          $ref: '#/components/schemas/Access'
        exit:
          $ref: '#/components/schemas/Access'

      required:
        - title
        - attestationRequired
        - type

    OrganizationGroup:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        isPrivate:
          type: boolean
        checkInDisabled:
          type: boolean
          default: false
        priority:
          type: number
      required:
        - name
        - isPrivate

    OrganizationConnectionRequestV1:
      type: object
      additionalProperties: false
      properties:
        idToken:
          type: string
          nullable: true
        organizationId:
          type: string
        registrationId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        base64Photo:
          type: string
        groupId:
          type: string
        responses:
          type: array
          items:
            type: string
      required:
        - organizationId
        # - registrationId
        - groupId
        - firstName
        - lastName
        - base64Photo

    OrganizationConnectionRequestV2:
      type: object
      properties:
        idToken:
          type: string
          nullable: true
        organizationId:
          type: string
        registrationId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        base64Photo:
          type: string
        groupId:
          type: string
        responses:
          type: array
          items:
            type: string
      required:
        - organizationId
        - registrationId
        - groupId
        - firstName
        - lastName
        - base64Photo

    OrganizationUsersGroupMoveData:
      type: object
      additionalProperties: false
      properties:
        userId:
          type: string
        newGroupId:
          type: string
        oldGroupId:
          type: string
        parentUserId:
          type: string
      required:
        - userId
        - newGroupId
        - oldGroupId

    OrganizationUsersGroupMoveOperationRequest:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUsersGroupMoveData'
          description: Location Ids within Organization
        dryRun:
          type: boolean
      required:
        - data
        - dryRun

    AuthLinkRequestRequest:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
      required:
        - email

    AuthLinkProcessRequest:
      type: object
      additionalProperties: false
      properties:
        idToken:
          type: string
          description: Id Token from Firebase Auth
        connectedId:
          type: string
          description: Your connected user Id
      required:
        - idToken
        - connectedId

    GroupReportEmailRequest:
      type: object
      additionalProperties: false
      properties:
        groupId:
          type: string
          description: id of the group to generate the report for
        organizationId:
          type: string
          description: id of the organization containingthe group
        email:
          type: string
          description: email to send the report to
        name:
          type: string
          description: name of the user receiving the report
        from:
          type: string
          description: ISO timestamp for the start of the report
        to:
          type: string
          description: ISO timestamp for the end of the report
      required:
        - groupId
        - organizationId
        - email
        - name
        - from
        - to

    InternalAdminApprovalCreateRequest:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          description: Email for admin
        organizationId:
          type: string
          description: Organization Id to become an admin of. Must be provided.
        locationIds:
          type: array
          items:
            type: string
          description: Location Ids within Organization
        superAdminForOrganizationIds:
          type: array
          items:
            type: string
          description: Organizaiton ids to become a super admin of. Must be provided can be empty.
        healthAdminForOrganizationIds:
          type: array
          items:
            type: string
          description: Organizaiton ids to become a health admin of. Must be provided can be empty.
        nfcAdminForOrganizationIds:
          type: array
          items:
            type: string
          description: Organizaiton ids to become a NFC tag admin of. Must be provided can be empty.
        nfcGateKioskAdminForOrganizationIds:
          type: array
          items:
            type: string
          description: Organizaiton ids to become a NFC Gate Kiosk admin. Must be provided can be empty.

        groupIds:
          type: array
          items:
            type: string
          description: Group Ids within Organization
        showReporting:
          type: boolean
          description: Show reporting feature
      required:
        - email
        - showReporting
        - organizationId
        - superAdminForOrganizationIds

    InternalAdminListRequest:
      type: object
      properties:
        organizationId:
          type: string
          description: Organization Id
        scope:
          type: string
          description: Look at admin approvals or users admin profiles
          enum: [approval, user]
      required:
        - organizationId
        - scope


    ContactTrace:
      type: object
      additionalProperties: false
      properties:
        userId:
          type: string
        date:
          type: string
        duration:
          type: number
        exposures:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
              locationId:
                type: string
              organizationid:
                type: string
              overlapping:
                type: array
                items:
                  type: object
                  properties:
                    start:
                      type: string
                    end:
                      type: string
                    sourceUserId:
                      type: string
                    sourceDependentId:
                      type: string
                    userId:
                      type: string

                  required:
                    - userId
                    - sourceUserId
                    - start
                    - end
        adminForLocationIds:
          type: array
          items:
            type: string
        superAdminForOrganizationIds:
          type: array
          items:
            type: string
        adminForOrganizationId:
          type: string
        showReporting:
          type: boolean

    TraceModel:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        userId:
          type: string
        includesGuardian:
          type: boolean
        dependantIds:
          type: array
          items:
            type: string
        passportStatus:
          type: string
        exposures:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
              locationId:
                type: string
              organizationid:
                type: string
              overlapping:
                type: array
                items:
                  type: object
                  properties:
                    start:
                      type: string
                    end:
                      type: string
                    sourceUserId:
                      type: string
                    sourceDependentId:
                      type: string
                    userId:
                      type: string

                  required:
                    - userId
                    - sourceUserId
                    - start
                    - end
        exposedIds:
          type: array
          items:
            type: string

    Attestation:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        answers:
          type: object
          description: answers to the questionnaire, keyed by numerical strings
          additionalProperties:
            type: object
            additionalProperties:
              oneOf:
                - type: string
                - type: boolean
        questions:
          type: object
          description: questions in the questionnaire, keyed by numerical strings
          additionalProperties:
            type: object
            properties:
              answers:
                type: object
                additionalProperties:
                  type: string
                  enum:
                    - "boolean"
                    - "datetime"
              value:
                type: string
        appliesTo:
          type: array
          items:
            oneOf:
              - type: string
              - type: object
                properties:
                  id:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  base64Photo:
                    type: string
                  group:
                    $ref: '#/components/schemas/OrganizationGroup'
        locationId:
          type: string
        attestationTime:
          type: string
        status:
          type: string
          enum:
            - pending
            - proceed
            - caution
            - stop

    FamilyStats:
      type: object
      additionalProperties: false
      properties:
        parent:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            groupName:
              type: string
            base64Photo:
              type: string
            status:
              type: string
              enum:
                - pending
                - proceed
                - caution
        dependents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              groupId:
                type: string
              groupName:
                type: string
              status:
                type: string
                enum:
                  - pending
                  - proceed
                  - caution

    AdminProfile:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
        enabled:
          type: boolean
        adminForGroupIds:
          type: array
          items:
            type: string
        adminForLocationIds:
          type: array
          items:
            type: string
        superAdminForOrganizationIds:
          type: array
          items:
            type: string
        nfcAdminForOrganizationIds:
          type: array
          items:
            type: string
        adminForOrganizationId:
          type: string
        showReporting:
          type: boolean

    User:
      type: object
      deprecated: true
      description: use `UserV3` instead
      additionalProperties: false
      properties:
        id:
          type: string
        email:
          type: string
          nullable: true
        firstName:
          type: string
        lastName:
          type: string
        base64Photo:
          type: string
        organizationIds:
          type: array
          nullable: true
          items:
            type: string
      required:
        - firstName
        - lastName
        - base64Photo

    UserV3:
      type: object
      deprecated: false
      additionalProperties: false
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        active:
          type: boolean
          description: Wheter the user account is active (has been verified with a magic-link)
        photo:
          type: string
          description: Photo URL
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
      required:
        - firstName
        - lastName

    UserWithGroup:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        photo:
          type: string
          description: Photo URL
        groupName:
          type: string
        memberId:
          type: string
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - firstName
        - lastName
        - photo
        - groupName

    CreateUserRequest:
      type: object
      properties:
        idToken:
          type: string
          nullable: false
        email:
          type: string
          nullable: false
        firstName:
          type: string
          nullable: false
        lastName:
          type: string
          nullable: false
        organizationId:
          type: string
          nullable: false
        registrationId:
          type: string
          nullable: true
        photo:
          type: string
          description: Photo URL
          nullable: true
      required:
        - idToken
        - email
        - firstName
        - lastName
        - organizationId

    CreateUserByAdminRequest:
      type: object
      properties:
        email:
          type: string
          nullable: false
        firstName:
          type: string
          nullable: false
        lastName:
          type: string
          nullable: false
        organizationId:
          type: string
          nullable: false
        registrationId:
          type: string
          nullable: true
        photo:
          type: string
          description: Photo URL
          nullable: true
        memberId:
          type: string
          nullable: true
        groupId:
          type: string
          nullable: true

      required:
        - email
        - firstName
        - lastName
        - organizationId
        - photo

    UpdateUserByAdminRequest:
      type: object
      properties:
        firstName:
          type: string
          nullable: false
        lastName:
          type: string
          nullable: false
        registrationId:
          type: string
          nullable: true
        photo:
          type: string
          description: Photo URL
          nullable: true
        memberId:
          type: string
          nullable: true

    MigrateUserRequest:
      type: object
      properties:
        email:
          type: string
          nullable: false
        firstName:
          type: string
          nullable: false
        lastName:
          type: string
          nullable: false
        registrationId:
          type: string
          nullable: false
        legacyProfiles:
          type: array
          items:
            properties:
              userId:
                type: string
                description: The principal user ID
              organizationId:
                type: string
                description: the principal user connected-organization
              groupId:
                type: string
                description: the principal user group ID
              dependentIds:
                type: array
                items:
                  type: string
                nullable: true
            required:
              - userId
              - organizationId
              - groupId
        photo:
          type: string
          description: Photo URL
          nullable: true
      required:
        - email
        - firstName
        - lastName
        - legacyProfiles

    UserEdit:
      type: object
      deprecated: true
      additionalProperties: false
      properties:
        parentUserId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        base64Photo:
          type: string
      required:
        - firstName
        - lastName
    UserDependent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        groupId:
          type: string
      required:
        - firstName
        - lastName
    UserLink:
      type: object
      deprecated: true
      properties:
        registrationId:
          type: string
      required:
        - registrationId

    Access:
      type: object
      additionalProperties: false
      properties:
        token:
          type: string
        userId:
          type: string
        statusToken:
          type: string
        locationId:
          type: string
        createdAt:
          type: string
        enteredAt:
          type: string
          nullable: true
        exitAt:
          type: string
          nullable: true
        includesGuardian:
          type: boolean
        dependants:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
            properties:
              id:
                type: string
              enteredAt:
                type: string
                nullable: true
              exitAt:
                type: string
                nullable: true

    ResponseOfOrganizationConnection:
      type: object
      additionalProperties: false
      properties:
        data:
          type: object
          additionalProperties: false
          properties:
            user:
              $ref: '#/components/schemas/User'
            organization:
              $ref: '#/components/schemas/Organization'
            group:
              $ref: '#/components/schemas/OrganizationGroup'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganizationConnectionUser:
      type: object
      additionalProperties: false
      properties:
        data:
          type: object
          additionalProperties: false
          properties:
            profile:
              $ref: '#/components/schemas/User'
            dependants:
              type: array
              items:
                $ref: '#/components/schemas/UserDependent'
            parentUserId:
              type: string
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganization:
      type: object
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Organization'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganizationLocations:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationLocation'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganizationLocation:
      type: object
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/OrganizationLocation'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganizations:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganizationGroups:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationGroup'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganizationStats:
      type: object
      additionalProperties: false
      properties:
        data:
          type: object
          additionalProperties: false
          properties:
            permissionToViewDetail:
              type: boolean
              description: If current admin can view accesses
            asOfDateTime:
              type: string
              description: The ISO date-time when the stats have been computed
              example: "2020-09-01T23:17:07.657Z"
            accesses:
              type: array
              items:
                type: object
                additionalProperties: false
                allOf:
                  - $ref: '#/components/schemas/Access'
                  - type: object
                    additionalProperties: false
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      status:
                        type: string
                        enum: [pending, proceed, caution, stop]

            passportsCountByStatus:
              type: object
              additionalProperties: false
              description: Total badge count per status
              properties:
                pending:
                  type: number
                proceed:
                  type: number
                caution:
                  type: number
                stop:
                  type: number
              example:
                pending: 1
                proceed: 1
                caution: 0
                stop: 0
            hourlyCheckInsCounts:
              type: array
              items:
                type: object
                additionalProperties: false
                properties:
                  date:
                    type: string
                  count:
                    type: number
                example: [{"date": "2020-09-01T13:00:00.000Z","count": 1},{"date": "2020-09-01T17:00:00.000Z","count": 1}]

        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfAdminProfile:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AdminProfile'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfUser:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserV3'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfUsers:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserV3'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfContactTraces:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ContactTrace'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfContactTraceExposures:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TraceModel'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfContactTraceAttestations:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Attestation'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfFamilyStats:
      type: object
      additionalProperties: false
      properties:
        data:
          type: object
          $ref: '#/components/schemas/FamilyStats'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfNfcTag:
      type: object
      additionalProperties: false
      properties:
        data:
          type: object
          properties:
            tagId:
              type: string
            legacyTagId:
              type: string
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfUserWithGroup:
      type: object
      additionalProperties: false
      properties:
        data:
          type: object
          $ref: '#/components/schemas/UserWithGroup'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfUsersByOrganization:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserWithGroup'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string
        page:
          type: number

  responses:
    Response:
      description: Default Response wrapper
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'

paths:
  /setTime:
    post:
      description: set the time on the server. Used in integration testing, and only works on local servers in guilible mode
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                milliseconds:
                  type: number
      responses:
        '200':
          description: Successfully set

  /organizations:
    post:
      description: Create new organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganization'

  /organizations/one:
    get:
      description: Find one organization by key or id
      parameters:
        - in: query
          name: key
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string

      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganization'

  /organizations/{organizationId}/scheduling:
    post:
      description: Update an organization's mailing schedule
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                hourToSendReport:
                  type: integer
                  minimum: 0
                  maximum: 23
                  description: hour of the day to send the report for this organization
                  nullable: true
                dayShift:
                  type: integer
                  minimum: 0
                  description: number of days ago to generate the report for (0 to generate it for the day it is sent, 1 for the day before...)
                  nullable: true
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationLocations'

  /organizations/{organizationId}/locations:
    post:
      description: Add locations to an organization
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: parentLocationId
          schema:
            type: string
          description: The parent of the locations (if there is one)
          required: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationLocation'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationLocations'
    put:
      description: Update locations
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationLocation'
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationLocations'
    get:
      description: Get organization locations
      parameters:
        - in: query
          name: parentLocationId
          schema:
            type: string
          description: The parent of the locations (if there is one)
          required: false
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationLocations'

  /organizations/{organizationId}/locations/{locationId}:
    get:
      description: Get a location
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: path
          name: locationId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationLocation'

  /organizations/{organizationId}/groups/public:
    get:
      description: Get organization groups
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationGroups'

  /organizations/{organizationId}/groups:
    post:
      description: Add groups to an organization
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationGroup'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationGroups'
    get:
      description: Get organization groups
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationGroups'
    put:
      description: Move users in between groups
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUsersGroupMoveOperationRequest'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationGroups'

  /organizations/{organizationId}/stats:
    get:
      description: Get stats for one organization (admin access required)
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: groupId
          schema:
            type: string
        - in: query
          name: locationId
          schema:
            type: string
        - in: query
          name: organizationId
          deprecated: true
          schema:
            type: string

      responses:
        '200':
          description: Successfully compute the stats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationStats'

  /organizations/{organizationId}/stats/user-report:
    get:
      description: Get pdf for one user (admin access required)
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: userId
          schema:
            type: string
          required: true
        - in: query
          name: parentUserId
          schema:
            type: string
        - in: query
          name: from
          schema:
            type: string
        - in: query
          name: to
          schema:
            type: string
      responses:
        '200':
          description: Successfully computed the stats
          content:
            application/pdf:
              schema:
                type: string
                format: binary

  /organizations/{organizationId}/stats/group-report:
    get:
      description: Get user reports for an entire group (admin access required). This may take a long time
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: groupId
          schema:
            type: string
          required: true

      responses:
        '200':
          description: Successfully computed the stats
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: object
                properties:
                  responseType:
                    type: string
                  message:
                    type: string

  /organizations/{organizationId}/stats/contact-trace-locations:
    get:
      description: Get contact traces locations (admin access required)
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: parentUserId
          schema:
            type: string
        - in: query
          name: from
          schema:
            type: string
        - in: query
          name: to
          schema:
            type: string
      responses:
        '200':
          description: Successfully computed (format to come)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationLocationWithAccess'

  /organizations/{organizationId}/stats/contact-traces:
    get:
      description: Get contact traces (admin access required)
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: parentUserId
          schema:
            type: string
        - in: query
          name: from
          schema:
            type: string
        - in: query
          name: to
          schema:
            type: string
      responses:
        '200':
          description: Successfully returning contract trace array
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfContactTraces'

  /organizations/{organizationId}/stats/contact-trace-exposures:
    get:
      description: Get contact traces exposures (admin access required)
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: parentUserId
          schema:
            type: string
        - in: query
          name: from
          schema:
            type: string
        - in: query
          name: to
          schema:
            type: string
      responses:
        '200':
          description: Successfully returning contract trace array
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfContactTraceExposures'

  /organizations/{organizationId}/stats/contact-trace-attestations:
    get:
      description: Get contact traces attestations (admin access required)
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: from
          schema:
            type: string
        - in: query
          name: to
          schema:
            type: string
      responses:
        '200':
          description: Successfully computed (format to come)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfContactTraceAttestations'

  /organizations/{organizationId}/stats/family:
    get:
      description: Get family data for the given userId
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: userId
          schema:
            type: string
          required: true
        - in: query
          name: parentUserId
          schema:
            type: string
      responses:
        '200':
          description: Successfully computed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfFamilyStats'

  /organizations/{organizationId}/stats/health:
    get:
      description: Get stats summary for one organization (admin access required)
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: groupId
          schema:
            type: string
        - in: query
          name: organizationId
          deprecated: true
          schema:
            type: string

      responses:
        '200':
          description: Successfully compute the stats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationStats'

  /organizations/{organizationId}/groups/{groupId}/users:
    post:
      description: Add users to a group (admin access required)
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: path
          name: groupId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: the user ids to add in the targeted group
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'

  /organizations/{organizationId}/groups/{groupId}:
    delete:
      description: Remove a group
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: path
          name: groupId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '403':
          description: Deletion failed because users are still attached. Details will be visible in server logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /organizations/{organizationId}/groups/zombie-users:
    delete:
      description: Remove dead users
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'

  /organizations/{organizationId}/groups/{groupId}/users/{userId}:
    delete:
      description: Take a user off a group (admin access required)
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: path
          name: groupId
          schema:
            type: string
          required: true
        - in: path
          name: userId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully removed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'

    put:
      description: Update a groupId for a user (admin access required)
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: path
          name: groupId
          schema:
            type: string
          required: true
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: query
          name: oldGroupId
          schema:
            type: string
          required: true

      responses:
        '200':
          description: Successfully removed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'

  /organizations/{organizationId}/config:
    get:
      description: Get app config info for the organization
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: The config info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationReminderSchedule'

  /user/connect/add:
    post:
      deprecated: true
      summary: Use `POST -> /api/v3/users/self/organizations` instead
      description: Connect a user to an organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationConnectionRequestV1'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizationConnection'

  /user/connect/v2/add:
    post:
      deprecated: true
      summary: Use `POST -> /api/v3/users/self/organizations` instead
      description: Connect a user to an organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationConnectionRequestV2'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizationConnection'

  /user/connect/{organizationId}/users/{userId}:
    get:
      deprecated: true
      summary: Use `GET -> /api/v3/users/self` instead
      description: Get info for a user
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: query
          name: parentUserId
          schema:
            type: string
      responses:
        '200':
          description: Successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizationConnectionUser'

  /user/connect/link/{userId}:
    put:
      deprecated: true
      description: Link info for a user
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLink'
      responses:
        '200':
          description: Successfully removed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'

  /user/connect/edit/{userId}:
    put:
      deprecated: true
      summary: Use `PUT -> /api/v3/users/self` instead
      description: Update info for a user
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEdit'

      responses:
        '200':
          description: Successfully removed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'

  /user/connect/locations:
    post:
      deprecated: true
      summary: Use `GET -> /api/v3/users/self/organizations` instead
      description: Find all the user's connected-organizations
      requestBody:
        content:
          application/json:
            schema:
              properties:
                userId:
                  type: string
              required:
                - userId
      responses:
        '200':
          description: Successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizations'

  /admin/auth/signIn/request:
    post:
      description: Admin Auth Sign In Request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLinkRequestRequest'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /admin/self:
    get:
      description: Authenticated Admin Profile
      responses:
        '200':
          description: The info requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProfile'

  /admin/auth/signIn/process:
    post:
      description: Admin Auth Sign In Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLinkProcessRequest'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfAdminProfile'

  /enterprise/admin/api/v3/users:
    get:
      summary: Organization users list
      description: Get users by organizationId
      security:
        - bearerAuthJWT: []
      parameters:
        - in: query
          name: organizationId
          schema:
            type: string
          required: true
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
          required: true
        - in: query
          name: perPage
          schema:
            type: integer
            minimum: 1
          required: true
        - in: query
          name: searchQuery
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUsersByOrganization'
    post:
      summary: Create User
      description: Creates a user profile with `CreateUserByAdminRequest` payload and returns a `User`
      security:
        - bearerAuthJWT: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserByAdminRequest'
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUser'

  /enterprise/admin/api/v3/users/{userId}:
    put:
      summary: Update User
      description: Update a user profile with `UpdateUserByAdminRequest` payload and returns a `User`
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserByAdminRequest'
      responses:
        '200':
          description: Successfully Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUser'


  /enterprise/admin/api/v3/tags:
    post:
      description: Create NFC TagId
      security:
        - bearerAuthJWT: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                userId:
                  type: string
                organizationId:
                  type: string
              required:
                - userId
                - organizationId
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfNfcTag'

  /enterprise/admin/api/v3/tags/{tagId}/user:
    get:
      description: Get user details by tagId
      security:
        - bearerAuthJWT: []
      parameters:
        - in: path
          name: tagId
          schema:
            type: string
          required: true
        - in: query
          name: legacyMode
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUserWithGroup'

  /internal/group-report:
    post:
      description: Request a report be sent to an email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupReportEmailRequest'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /internal/admin/operations/create:
    post:
      description: Internal Admin Approval Creation API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalAdminApprovalCreateRequest'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /internal/admin/operations/list:
    post:
      description: Internal Admin List API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalAdminListRequest'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /enterprise/api/v3/users:
    post:
      summary: Account Registration
      description: Creates a user profile with `CreateUserRequest` payload and returns a `User`
      tags:
        - Account management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUser'

  /enterprise/api/v3/users/search:
    get:
      summary: Search users list
      description: Find `User`(s) by admin
      security:
        - bearerAuthJWT: []
      tags:
        - Account management
      parameters:
        - in: query
          name: searchQuery
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUsersByOrganization'

  /enterprise/api/v3/users/migration:
    post:
      summary: Profile Migration
      description: Creates a user profile and link/migrate existing user's data
      tags:
        - Account management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrateUserRequest'
      responses:
        '200':
          description: Successfully migrated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUser'

  /enterprise/api/v3/users/auth:
    post:
      summary: User authentication
      description: Sends a magic-link to authenticate the user
      tags:
        - Account management
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  nullable: false
                organizationId:
                  type: string
                  nullable: false
                userId:
                  type: string
                  nullable: true
              required:
                - email
                - organizationId
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /enterprise/api/v3/users/auth/confirmation:
    post:
      summary: Account registration confirmation
      description: Completes user registration with magic-link information
      tags:
        - Account management
      requestBody:
        content:
          application/json:
            schema:
              properties:
                organizationId:
                  type: string
                  nullable: false
                idToken:
                  type: string
                  nullable: false
                userId:
                  type: string
                  nullable: true
              required:
                - organizationId
                - idToken
      responses:
        '200':
          description: Successfull completed registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUser'

  /enterprise/api/v3/users/self:
    get:
      summary: User details
      description: Gets authenticated user details
      security:
        - bearerAuthJWT: []
      tags:
        - Account management
      responses:
        '200':
          description: Successfull retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUser'

    put:
      summary: Account update
      description: Updates authenticated user (only first name, last name and photo)
      tags:
        - Account management
      requestBody:
        content:
          application/json:
            schema:
              properties:
                firstName:
                  type: string
                  nullable: true
                lastName:
                  type: string
                  nullable: true
                photo:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Successfull updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUser'

  /enterprise/api/v3/users/self/organizations:
    get:
      summary: Connected organizations
      description: Get all the authenticated-user's organizations
      tags:
        - Account management
      responses:
        '200':
          description: Successfull retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizations'

    post:
      summary: Organization connection
      description: Connect an organization to the authenticated user, if relation doesn't yet exist
      tags:
        - Account management
      requestBody:
        content:
          application/json:
            schema:
              properties:
                organizationId:
                  type: string
                  nullable: false
              required:
                - organizationId
      responses:
        '200':
          description: Successfull updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /enterprise/api/v3/users/self/organizations/{organizationId}:
    delete:
      summary: Unlink organization
      description: Removes the authenticated user from an organization and all the groups within that organization
      tags:
        - Account management
      parameters:
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfull unlinked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /enterprise/api/v3/users/self/groups:
    get:
      summary: Connected groups
      description: Get all the authenticated-user's connected-groups within an organization
      tags:
        - Account management
      parameters:
        - in: query
          name: organizationId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfull retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizationGroups'

    post:
      summary: Group connection
      description: Connects the authenticated user to a group if not linked already
      tags:
        - Account management
      requestBody:
        content:
          application/json:
            schema:
              properties:
                organizationId:
                  type: string
                  nullable: false
                groupId:
                  type: string
                  nullable: false
              required:
                - organizationId
                - groupId
      responses:
        '200':
          description: Successfull linked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /enterprise/api/v3/users/self/groups/{groupId}:
    delete:
      summary: Unlink group
      description: Removes the authenticated user from a group
      tags:
        - Account management
      parameters:
        - in: path
          name: groupId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfull unlinked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /enterprise/api/v3/users/self/dependents:
    get:
      summary: Account dependents
      description: Gets the authenticated user's direct dependents
      tags:
        - Account management
      responses:
        '200':
          description: Successfull retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUsers'

    post:
      summary: Account dependent link
      description: |
        Create and/or links one or multiple user(s) to the authenticated user
        If the "dependent.id" is provided, the found dependent will be linked
      tags:
        - Account management
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserV3'
      responses:
        '200':
          description: Successfully linked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUsers'

  /enterprise/api/v3/users/self/parents:
    get:
      summary: Account parents
      description: Gets the authenticated user's direct-parents
      tags:
        - Account management
      responses:
        '200':
          description: Successfull retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUsers'

  /enterprise/api/v3/users/self/dependents/{dependentId}:
    delete:
      summary: Unlink dependent
      description: |
        Remove a user as a dependent of the authenticated user
        Delete the dependent's data if query param `hard` is true
      tags:
        - Account management
      parameters:
        - in: path
          name: dependentId
          schema:
            type: string
          required: true
        - in: query
          name: hard
          description: Delete dependent's data if true
          schema:
            type: boolean
          required: false
      responses:
        '200':
          description: Successfull unlinked/removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /enterprise/api/v3/users/self/dependents/{dependentId}/organizations:
    get:
      summary: Connected organizations
      description: Get all the organizations connected with an authenticated-user's dependent
      tags:
        - Account management
      parameters:
        - in: path
          name: dependentId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfull retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizations'

    post:
      summary: Organization connection
      description: Connect an organization to a dependent, if relation doesn't yet exist
      tags:
        - Account management
      parameters:
        - in: path
          name: dependentId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                organizationId:
                  type: string
                  nullable: false
              required:
                - organizationId
      responses:
        '200':
          description: Successfull updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /enterprise/api/v3/users/self/dependents/{dependentId}/organizations/{organizationId}:
    delete:
      summary: Unlink dependent from an organization
      description: Removes the authenticated user's dependent from an organization and all the groups within that organization
      tags:
        - Account management
      parameters:
        - in: path
          name: dependentId
          schema:
            type: string
          required: true
        - in: path
          name: organizationId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfull unlinked/removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /enterprise/api/v3/users/self/dependents/{dependentId}/groups:
    get:
      summary: Connected groups
      description: Get all the connected-groups of a dependent
      tags:
        - Account management
      parameters:
        - in: query
          name: dependentId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfull retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizationGroups'

    post:
      summary: Group connection
      description: Connects an authenticated-user's dependent to a group if not linked already
      tags:
        - Account management
      parameters:
        - in: path
          name: dependentId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                organizationId:
                  type: string
                  nullable: false
                groupId:
                  type: string
                  nullable: false
              required:
                - organizationId
                - groupId
      responses:
        '200':
          description: Successfull linked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    put:
      summary: Update Group
      description: Update a user's dependent group within the same organization
      tags:
        - Account management
      parameters:
        - in: path
          name: dependentId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                organizationId:
                  type: string
                  nullable: false
                fromGroupId:
                  type: string
                  nullable: false
                toGroupId:
                  type: string
                  nullable: false
              required:
                - organizationId
                - fromGroupId
                - toGroupId
      responses:
        '200':
          description: Successfull updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
