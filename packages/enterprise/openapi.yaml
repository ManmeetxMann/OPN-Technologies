openapi: 3.0.1
info:
  title: Enterprise API
  version: 1.0.0
components:
  schemas:
    Response:
      type: object
      properties:
        data:
          nullable: true
          type: object
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    Organization:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
      required:
        - name

    OrganizationLocation:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        attestationRequired:
          type: boolean
        questionnaireId:
          type: string
          nullable: true
        zones:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/OrganizationLocationZone'
      required:
        - title
        - address
        - city
        - state
        - country
        - attestationRequired

    OrganizationLocationZone:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        address:
          type: string
        attestationRequired:
          type: boolean
        questionnaireId:
          type: string
          nullable: true
      required:
        - title
        - address
        - attestationRequired

    OrganizationConnectionRequest:
      type: object
      properties:
        key:
          type: number
        firstName:
          type: string
        lastNameInitial:
          type: string
          minLength: 1
          maxLength: 1
        birthYear:
          type: number
        base64Photo:
          type: string
      required:
        - firstName
        - lastNameInitial
        - birthYear
        - base64Photo

    AuthLinkRequestRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email
        
    
    AuthLinkProcessRequest:
      type: object
      properties:
        idToken:
          type: string
          description: Id Token from Firebase Auth
        connectedId:
          type: string
          description: Your connected user Id
      required:
        - idToken
        - connectedId

    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastNameInitial:
          type: string
          minLength: 1
          maxLength: 1
        birthYear:
          type: number
          minLength: 4
          maxLength: 4
        base64Photo:
          type: string
        organizationIds:
          type: array
          nullable: true
          items:
            type: string
      required:
        - firstName
        - lastNameInitial
        - birthYear
        - base64Photo

    ResponseOfOrganizationConnection:
      type: object
      properties:
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            organization:
              $ref: '#/components/schemas/Organization'
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganization:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Organization'
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganizationLocations:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationLocation'
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfOrganizations:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

  responses:
    Response:
      description: Default Response wrapper
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
            
paths:
  /organizations:
    post:
      description: Create new organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganization'
  /organizations/{organizationId}/locations:
    post:
      description: Add locations to an organization
      parameters:
        - in: path
          name: id
          schema:
            type: string
#          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationLocation'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationLocations'
    get:
      description: Get organization locations
      parameters:
        - in: path
          name: id
          schema:
            type: string
#          required: false
      responses:
        '200':
          description: Successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationLocations'

  /user/connect/add:
    post:
      description: Connect a user to an organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationConnectionRequest'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizationConnection'

  /user/connect/locations:
    post:
      description: Find all the user's connected-organizations
      requestBody:
        content:
          application/json:
            schema:
              properties:
                userId:
                  type: string
              required:
                - userId
      responses:
        '200':
          description: Successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganizations'

                

  /admin/auth/signIn/request:
    post:
      description: Admin Auth Sign In Request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLinkRequestRequest'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /admin/auth/signIn/process:
    post:
      description: Admin Auth Sign In Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLinkProcessRequest'
      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
