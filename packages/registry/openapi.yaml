openapi: 3.0.1
info:
  title: Registry Endpoint
  version: 1.0.0
components:
  schemas:
    Response:
      type: object
      properties:
        data:
          nullable: true
          type: object
        status:
          type: object
          properties:
            code:
              type: string
              enum: [
                succeed,
                failed,
                validation_error,
                internal_server_error,
                unauthorized,
                access_denied,
                resource_not_found
              ]
            message:
              nullable: true
              type: string

    Registration:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [admin, user]
        platform:
          type: string
          enum: [ios, android]
        osVersion:
          type: string
        pushToken:
          type: string
          nullable: true
          minLength: 5
          maxLength: 400
      required:
        - platform
        - osVersion

    UserDependant:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastNameInitial:
          type: string
        relation:
          type: string
          enum:
            - child
            - parent
      required:
        - firstName
        - lastNameInitial

    ResponseOfRegistration:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Registration'
        status:
          type: object
          properties:
            code:
              type: string
              enum: [
                succeed,
                failed,
                validation_error,
                internal_server_error,
                unauthorized,
                access_denied,
                resource_not_found
              ]
            message:
              nullable: true
              type: string

    ResponseOfUserDependants:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserDependant'
        status:
          type: object
          properties:
            code:
              type: string
              enum: [
                succeed,
                failed,
                validation_error,
                internal_server_error,
                unauthorized,
                access_denied,
                resource_not_found
              ]
            message:
              nullable: true
              type: string

  responses:
    Response:
      description: Default Response wrapper
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
paths:
  /user/add:
    post:
      description: Register new app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
      responses:
        "200":
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfRegistration'

  /admin/add:
    post:
      description: Register new app
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                registrationToken:
                  type: string
                  minLength: 5
                  maxLength: 400
              required:
                - registrationToken

      responses:
        "200":
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfRegistration'

  /v2/users/{userId}/dependants:
    get:
      description: Get all dependants
      parameters:
        - in: path
          name: userId
          schema:
            type: string
#          required: true
      responses:
        "200":
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUserDependants'
    post:
      description: Add one or multiple dependant(s)
      parameters:
        - in: path
          name: userId
          schema:
            type: string
#          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserDependant'

      responses:
        "200":
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUserDependants'
  /v2/users/{userId}/dependants/{dependantId}:
    delete:
      description: Remove user's dependant
      parameters:
        - in: path
          name: userId
          schema:
            type: string
      #          required: true
        - in: path
          name: dependantId
          schema:
            type: string
            #          required: true
      responses:
        "200":
          description: Successfully removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
