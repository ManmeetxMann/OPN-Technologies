openapi: 3.0.1
info:
  title: Registry Endpoint
  version: 1.0.0
components:
  schemas:
    Response:
      type: object
      additionalProperties: false
      properties:
        data:
          nullable: true
          type: object
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum: [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                resource_not_found
                ]
            message:
              nullable: true
              type: string

    Registration:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        platform:
          type: string
          enum: [ios, android]
        osVersion:
          type: string
        userIds:
          type: array
          items:
            type: string
        pushToken:
          type: string
          nullable: true
      required:
        - platform
        - osVersion

    RegistrationUpdate:
      type: object
      additionalProperties: false
      properties:
        registrationId:
          type: string
        pushToken:
          type: string
      required:
        - registrationId
        - pushToken

    UserDependant:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        groupId:
          type: string
      required:
        - firstName
        - lastName
        - groupId

    ResponseOfRegistration:
      type: object
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Registration'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum: [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                resource_not_found
                ]
            message:
              nullable: true
              type: string

    ResponseOfUserDependants:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserDependant'
        status:
          type: object
          additionalProperties: false
          properties:
            code:
              type: string
              enum: [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                resource_not_found
                ]
            message:
              nullable: true
              type: string

  responses:
    Response:
      description: Default Response wrapper
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
paths:
  /user/add:
    post:
      description: Register new app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
      responses:
        "200":
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfRegistration'
              
  /user/update:
    put:
      description: Update Registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationUpdate'
      responses:
        "200":
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /v2/users/{userId}/dependants:
    get:
      description: Get all dependants
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUserDependants'
    post:
      description: Add one or multiple dependant(s)
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                organizationId:
                  type: string
                dependants:
                  type: array
                  items:
                    $ref: '#/components/schemas/UserDependant'

      responses:
        "200":
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfUserDependants'
    
  /v2/users/{userId}/dependants/{dependantId}:
    delete:
      description: Remove a user's dependant (Use `DELETE -> /v2/users/{userId}/dependants` instead)
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: dependantId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successfully removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
