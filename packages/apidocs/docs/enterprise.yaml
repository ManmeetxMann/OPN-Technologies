openapi: 3.0.1
info:
  title: Enterprise API
  version: 1.0.0
components:
  schemas:
    Response:
      type: object
      properties:
        data:
          nullable: true
          type: object
        status:
          type: object
          properties:
            code:
              type: string
              enum: [
                succeed,
                failed,
                validation_error,
                internal_server_error,
                unauthorized,
                access_denied,
                resource_not_found
              ]
            message:
              nullable: true
              type: string

    Organization:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - name

    OrganizationLocation:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        attestationRequired:
          type: boolean
        questions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/OrganizationQuestion'
        zones:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/OrganizationLocationZone'
      required:
        - title
        - address
        - city
        - state
        - country
        - attestationRequired

    OrganizationLocationZone:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        address:
          type: string
        attestationRequired:
          type: boolean
        questions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/OrganizationQuestion'
      required:
        - title
        - address
        - attestationRequired

    OrganizationQuestion:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
        type:
          type: string
          enum: [boolean, date]
      required:
        - value
        - type


    ResponseOfOrganization:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Organization'
        status:
          type: object
          properties:
            code:
              type: string
              enum: [
                succeed,
                failed,
                validation_error,
                internal_server_error,
                unauthorized,
                access_denied,
                resource_not_found
              ]
            message:
              nullable: true
              type: string

    ResponseOfOrganizationLocations:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationLocation'
        status:
          type: object
          properties:
            code:
              type: string
              enum: [
                succeed,
                failed,
                validation_error,
                internal_server_error,
                unauthorized,
                access_denied,
                resource_not_found
              ]
            message:
              nullable: true
              type: string

  responses:
    Response:
      description: Default Response wrapper
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
paths:
  /organizations:
    post:
      description: Create new organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        "200":
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfOrganization'
  /organizations/{id}/locations:
    post:
      description: Add locations to an organization
      parameters:
        - in: path
          name: id
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationLocation'
      responses:
        "200":
          description: Successfully added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationLocations'
    get:
      description: Get organization locations
      parameters:
        - in: path
          name: id
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOfOrganizationLocations'
