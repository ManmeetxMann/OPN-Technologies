openapi: 3.0.1
info:
  title: Access API
  version: 1.0.0
components:
  securitySchemes:
    bearerAuthJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Response:
      type: object
      properties:
        data:
          nullable: true
          type: object
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    Access:
      type: object
      properties:
        token:
          type: string
        userId:
          type: string
        statusToken:
          type: string
        locationId:
          type: string
        createdAt:
          type: string
        enteredAt:
          type: string
          nullable: true
        exitAt:
          type: string
          nullable: true
        includesGuardian:
          type: boolean
        dependants:
          type: object
          additionalProperties:
            type: object
            properties:
              id:
                type: string
              enteredAt:
                type: string
                nullable: true
              exitAt:
                type: string
                nullable: true


    Passport:
      type: object
      properties:
        id:
          type: string
        statusToken:
          type: string
        status:
          type: string
          enum: [pending,proceed,caution,stop]
        validFrom:
          type: string
        validUntil:
          type: string

    EntryOrExitRequest:
      type: object
      properties:
        accessToken:
          type: string
        userId:
          type: string
      required:
        - accessToken
        - userId

    SelfEntryOrExitRequest:
      type: object
      properties:
        organizationId:
          type: string
        locationId:
          type: string
        accessToken:
          type: string
      required:
        - organizationId
        - locationId
        - accessToken

    StatusTokenExchangeRequest:
      type: object
      properties:
        statusToken:
          type: string
        locationId:
          type: string
        userId:
          type: string
        includeGuardian:
          type: boolean
          description: In this version, this argument has no effect. Guardians are never included if the access includes dependants
        dependantIds:
          type: array
          items:
            type: string
      required:
        - statusToken
        - locationId
        - userId

    Statistics:
      type: object
      properties:
        peopleOnPremises:
          type: number
        accessDenied:
          type: number
        asOfDateTime:
          type: string
          description: ISO date (eg. "2020-08-27T13:45:00.141Z")
        exposures:
          type: number
          description: Number of exposures
        pendingPassports:
          type: number
          description: Number of pending passports
        proceedPassports:
          type: number
          description: Number of proceed passports
        cautionPassports:
          type: number
          description: Number of caution passports
        stopPassports:
          type: number
          description: Number of stop passports
        checkInsPerHour:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                description: ISO date (eg. "2020-08-27T13:45:00.141Z")
              count:
                type: number
                description: Number of check-ins at the given time

    ResponseOfAccess:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Access'
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfPassport:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Passport'
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string


    ResponseOfStatistics:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Statistics'
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

    ResponseOfEnterOrExit:
      type: object
      properties:
        data:
          type: object
          properties:
            passport:
              $ref: '#/components/schemas/Passport'
            base64Photo:
              type: string
            includesGuardian:
              type: boolean
            firstName:
              type: string
            lastName:
              type: string
            dependants:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                [
                  succeed,
                  failed,
                  validation_error,
                  internal_server_error,
                  unauthorized,
                  access_denied,
                  resource_not_found,
                ]
            message:
              nullable: true
              type: string

  responses:
    Response:
      description: Default Response wrapper
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
paths:
  /user/createToken:
    post:
      description: Exchange status-token for an access-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusTokenExchangeRequest'
      responses:
        '200':
          description: Successfully exchanged
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfAccess'

  /admin/enter:
    post:
      description: Handle user's entrance with access-token
      security:
        - bearerAuthJWT: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntryOrExitRequest'
      responses:
        '200':
          description: Successfully handled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfEnterOrExit'

  /admin/exit:
    post:
      description: Handle user's exit with access-token
      security:
        - bearerAuthJWT: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntryOrExitRequest'
      responses:
        '200':
          description: Successfully handled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfEnterOrExit'

  /admin/stats:
    post:
      description: Daily and live stats for a location
      security:
        - bearerAuthJWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locationId:
                  type: string
              required:
                - locationId
      responses:
        '200':
          description: Successfully handled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfStatistics'

  /user/enter:
    post:
      description: Handle self user's entrance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfEntryRequest'
      responses:
        '200':
          description: Successfully handled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfEnterOrExit'

  /user/exit:
    post:
      description: Handle self user's exit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfEntryRequest'
      responses:
        '200':
          description: Successfully handled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOfEnterOrExit'
